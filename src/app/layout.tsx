// "use client"; //client component 를 사용, 없으면 server component 사용


import Link from "next/link";
import './globals.css'
import type {Metadata} from 'next'
// import {useEffect, useState} from "react";

// client component 로 변경했기 때문에 server component 는 사용 불가
// export const metadata: Metadata = {
//     title: 'Learn Next.js',
//     description: 'Generated by Neighbor Kim',
// }

type Topic = {
    id: number;
    title: string;
    body: string;
}
export default async function RootLayout({children,}: { children: React.ReactNode }) {
    // const [topics, setTopics] = useState<Topic[]>([]);
    //
    // // useEffect 로 서버에서 클라이언트로 데이터를 가져오고있다.
    // useEffect(() => {
    //     fetch('http://localhost:9999/topics')
    //         .then(resp => resp.json())
    //         .then(result => {
    //             setTopics(result);
    //         })
    // }, []);

    const resp = await fetch('http://localhost:9999/topics');
    const topics = await resp.json();

    return (
        <html>
        <body>
        {/* a에서 Link로 변경시 로드가 미리되므로 SPA 구현할 수 있음*/}
        <h1><Link href="/">WEB</Link></h1>
        <ol>
            {topics.map((topic:Topic) => {
                return <li key={topic.id}><Link href={`/read/${topic.id}`}>{topic.title}</Link>
                </li>
            })}
        </ol>
        {children}
        <ul>
            <li><Link href="/create">Create</Link></li>
            <li><Link href="/update/1">Update</Link></li>
            <li><input type="button" value="delete"/></li>
        </ul>
        </body>
        </html>
    )
}
